# --- Defaults ---

# --- pymarl options ---
runner: "episode" # Runs 1 env for an episode
mac: "basic_mac" # Basic controller
env: "traffic" # Environment name
env_args: {} # Arguments for the environment
batch_size_run: 1 # Number of environments to run in parallel
# n_episodes: 1000000 # Total numbe of episodes to run
test_nepisode: 16 # Number of episodes to test for
test_interval: 200 # Test after {} timesteps have passed
test_greedy: True # Use greedy evaluation (if False, will set epsilon floor to 0
log_interval: 200 # Log summary of stats after every {} timesteps
runner_log_interval: 200 # Log runner stats (not test stats) every {} timesteps
learner_log_interval: 200 # Log training stats every {} timesteps
t_max:  20000000  # Stop running after this many timesteps
use_cuda: True # Use gpu by default unless it isn't available
buffer_cpu_only: True # If true we won't keep all of the replay buffer in vram

# --- Logging options ---
use_tensorboard: True # Log results to tensorboard
save_model: True # Save the models to disk
save_model_interval: 2000000 # Save models after this many timesteps
checkpoint_path: "" # Load a checkpoint from this path
evaluate: False # Evaluate model for test_nepisode episodes and quit (no training)
load_step: 0 # Load model trained on this many timesteps (0 if choose max possible)
save_replay: False # Saving the replay of the model loaded from checkpoint_path
local_results_path: "results" # Path for local results

# --- RL hyperparameters ---
gamma: 1.0
batch_size: 1024 # Number of episodes to train on
buffer_size: 5000 # Size of the replay buffer
lr: 0.00005 # Learning rate for agents
critic_lr: 0.00005 # Learning rate for critics
optim_alpha: 0.99 # RMSProp alpha
optim_eps: 0.00001 # RMSProp epsilon
grad_norm_clip: 10 # Reduce magnitude of gradients above this L2 norm

# --- Agent parameters. Should be set manually. ---
agent: "updet" # Options [updet, transformer_aggregation, rnn]
rnn_hidden_dim: 64 # Size of hidden state for default rnn agent
obs_agent_id: False # Include the agent's one_hot id in the observation
obs_last_action: False # Include the agent's last action (one_hot) in the observation

# --- Transformer parameters. Should be set manually. ---
token_dim: 22 # Marines. For other unit type (e.g. Zeolot) this number can be different (6).
emb: 100 #32 # embedding dimension of transformer
heads: 3 # head number of transformer
depth: 2 # block number of transformer
ally_num: 10 #5 # number of ally (5m_vs_6m)
enemy_num: 0 #6 # number of enemy (5m_vs_6m)

# --- Experiment running params ---
repeat_id: 1
label: "default_label"
